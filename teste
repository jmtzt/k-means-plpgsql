CREATE TABLE IRIS(
    sepal_length REAL,
    sepal_width REAL,
    petal_length REAL,
    petal_width REAL,
    species INTEGER
);

-- Iris-setosa - 0
-- Iris-versicolor - 1
-- Iris-virginica - 2

--COPY IRIS from '/Users/jmttzt/Desktop/5Periodo/BD2/trabalho1/iris.data' DELIMITER ',';
COPY IRIS from 'C:/Users/vinic/Desktop/Trabalhos/BD2/TrabsBD/k-means-plpgsql/iris.data' DELIMITER ',';


SELECT * FROM IRIS;

SELECT MIN(SEPAL_LENGTH) AS MIN_SL, MAX(SEPAL_LENGTH) AS MAX_SL,
		MIN(SEPAL_WIDTH) AS MIN_SW, MAX(SEPAL_WIDTH) AS MAX_SW,
		MIN(PETAL_LENGTH) AS MIN_PL, MAX(PETAL_LENGTH) AS MAX_PL,
		MIN(PETAL_WIDTH) AS MIN_PW, MAX(PETAL_WIDTH) AS MAX_PW
			FROM IRIS;
-- MIN_SL = 4.3
-- MAX_SL = 7.9
-- MIN_SW = 2
-- MAX_SW = 4.4
-- MIN_PL = 1
-- MAX_PL = 6.9
-- MIN_PW = 0.1
-- MAX_PW = 2.5

CREATE TABLE IRIS_NORMALIZADO(
	cod SERIAL,
    sepal_length REAL,
    sepal_width REAL,
    petal_length REAL,
    petal_width REAL,
    species INTEGER
);

INSERT INTO IRIS_NORMALIZADO 
	SELECT (SEPAL_LENGTH - 4.3)/(7.9 - 4.3),
			(SEPAL_WIDTH - 2)/(4.4 - 2),
			(PETAL_LENGTH - 1)/(6.9 - 1),
			(PETAL_WIDTH - 0.1)/(2.5 - 0.1),
			SPECIES FROM IRIS;
SELECT * FROM IRIS_NORMALIZADO;

CREATE OR REPLACE FUNCTION CREATE_CENTROID (kn integer)
RETURNS TABLE
(
	cod int,
	sepal_length REAL,
    sepal_width REAL,
    petal_length REAL,
    petal_width REAL,
	species INTEGER
) AS $$
DECLARE
	REG RECORD;
	RAND INT[];
BEGIN
	FOR i IN 1..kn 
		loop
			RAND[i]:= floor(random() * 150 + 1)::int;
		end loop;
		
	return query Select * from IRIS_NORMALIZADO where IRIS_NORMALIZADO.cod = any(RAND);
END; $$
Language PLPGSQL;

CREATE OR REPLACE FUNCTION CALC_DISTANCIAS (kn integer)
RETURNS TABLE 
(
	dis_point_c1 REAL,
	dis_point_c2 REAL, 
	dis_point_c3 REAL
) as $$
DECLARE
	REG RECORD;
	DIS RECORD;
BEGIN
--	SELECT INTO REG * FROM CREATE_CENTROID(3);
--	INSERT INTO DIS VALUES SQRT((POWER((REG.sepal_length - IRIS_NORMALIZADO.sepal_length),2) + 
--					POWER((REG.sepal_width - IRIS_NORMALIZADO.sepal_width),2) +
--					POWER((REG.petal_length - IRIS_NORMALIZADO.petal_length),2) +
--					POWER((REG.petal_width - IRIS_NORMALIZADO.petal_width),2)));
	FOR REG IN(SELECT 
 		sepal_length,
    	sepal_width,
    	petal_length,
    	petal_width  
        FROM CREATE_CENTROID(kn)
 		LOOP
        	dis_point_c1 :=  SQRT((POWER((REG.sepal_length - IRIS_NORMALIZADO.sepal_length),2) + 
					POWER((REG.sepal_width - IRIS_NORMALIZADO.sepal_width),2) +
					POWER((REG.petal_length - IRIS_NORMALIZADO.petal_length),2) +
					POWER((REG.petal_width - IRIS_NORMALIZADO.petal_width),2)));
 			
        	RETURN NEXT;
 		END LOOP;
	RETURN QUERY SELECT * FROM DIS;
END; $$
LANGUAGE PLPGSQL;

SELECT CALC_DISTANCIAS()
--CREATE TABLE IRIS_TESTE(
--	cod SERIAL,
 --   sepal_length REAL,
  --  sepal_width REAL,
   -- petal_length REAL,
   -- petal_width REAL,
   -- species INTEGER
--);
--insert into IRIS_TESTE select * from create_centroid(3);

--SELECT * FROM IRIS_TESTE;